generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String        @id @default(cuid())
    name          String?
    email         String?       @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    PlatformUser  PlatformUser?
    Enquiry       Enquiry[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model PlatformUser {
    id             String  @id @default(cuid())
    userId         String  @unique
    primaryProfile String?
    techStack      String?
    responseTime   String?

    user    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    Enquiry Enquiry[]
}

model Enquiry {
    id          String @id @default(cuid())
    lancerId    String
    userId      String
    whatToBuild String
    timeFrame   String
    budget      Int

    lancer PlatformUser @relation(fields: [lancerId], references: [userId], onDelete: Cascade)
    user   User         @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([lancerId])
    @@index([userId])
}
